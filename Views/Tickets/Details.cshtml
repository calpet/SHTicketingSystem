@using SelfHelpTicketingSystem.Classes
@using Shts_BusinessLogic
@using Shts_BusinessLogic.Collection_Interfaces
@using Shts_Entities.Enums
@inject IUserCollection UserCollection
@model SelfHelpTicketingSystem.Models.TicketViewModel

@{
    ViewData["Title"] = "Details";
    int uid = CookieManager.GetUserId();
    Model.Comment = new CommentViewModel();
    Model.Comment.TicketId = Model.Id;
}

<head>
    <link href="~/css/comment.css" rel="stylesheet" />
</head>

<h1>Details</h1>

@if (TempData["CommentPostFailed"] != null)
{
    <p class="alert alert-danger">@TempData["CommentPostFailed"].ToString()</p>
}

<div class="page-wrap">
    <div>
        <hr />
        <input hidden asp-for="Id" value="@Model.Id" />
        @if (CookieManager.GetUserId() == Model.AuthorId || CookieManager.GetUserId() == Model.AgentId)
        {
            <div> @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |</div>
            <div id="delete"> @Html.ActionLink("Delete", "Delete", new { id = Model.Id }) </div>
        }
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Author)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Author)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayName("Agent")
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Agent)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Subject)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Subject)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Attachment)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Attachment)

            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Priority)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Priority)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Status)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Status)
            </dd>
            <dt class="col-sm-2">
                <label>Created at</label>
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CreatedAt)
            </dd>
            <dt class="col-sm-2">
                <label>Last edited</label>
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.LastEdited)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Content)
            </dt>
            <dd class="col-sm-10">
                @Html.Raw(Model.Content)
            </dd>
        </dl>
    </div>
    <div class="container">
        <div class="row">
            <h2>Comments</h2>
        </div>
        <hr>
        @if (Model.Comments.Count == 0)
        {
            <p class="alert alert-danger align-content-center">@TempData["NoComments"]</p>
        }
        else
        {
            foreach (var comment in Model.Comments)
            {
                <div class="container">
                    <div class="row">
                        <div class="col-md-8">
                            @{Html.RenderPartial("~/Views/Comments/_Comment.cshtml", comment);}
                        </div>
                    </div>
                </div>
            }
        }
    </div>
    <br />
    <div class="row">
        @{Html.RenderPartial("~/Views/Comments/_Create.cshtml", Model.Comment);}
    <br />
</div>
<div class="row">
    @Html.ActionLink("Back to list", "Preview", new { id = uid })
</div>
</div>

<script src="~/js/deleteTicket.js"></script>
